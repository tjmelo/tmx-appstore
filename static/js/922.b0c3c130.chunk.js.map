{"version":3,"file":"static/js/922.b0c3c130.chunk.js","mappings":"iKACA,QAAkC,qC,aCElC,MAAMA,GAAcC,EAAAA,EAAAA,MAAK,IAAM,+BACzBC,GAAeD,EAAAA,EAAAA,MAAK,IAAM,8BAC1BE,GAAgBF,EAAAA,EAAAA,MAAK,IAAM,+BAC3BG,GAAgBH,EAAAA,EAAAA,MAAK,IAAM,+BAkBpBI,EAA4CC,IAGrC,IAHsC,UACtDC,EAAS,cACTC,GACHF,EAGG,MAAOG,EAAQC,IAAaC,EAAAA,EAAAA,UAAc,GAEpCC,GAAYC,EAAAA,EAAAA,aAAaJ,IAC3B,MAAMK,EAAKP,EAAUO,GACfC,GAAkBC,EAAAA,EAAAA,GAAA,CAAKF,MAAOL,GACpCC,EAAUK,IACX,CAACR,EAAUO,KAMd,OAJAG,EAAAA,EAAAA,WAAU,KACNT,EAAcC,MAIdS,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAA0B,cAAY,oBAAmBC,SAAA,EACrEC,EAAAA,EAAAA,KAACtB,EAAW,CAACO,UAAWA,KACxBe,EAAAA,EAAAA,KAAClB,EAAa,CAACG,UAAWA,EAAWK,UAAWA,KAChDU,EAAAA,EAAAA,KAACpB,EAAY,CAACK,UAAWA,KACzBe,EAAAA,EAAAA,KAACnB,EAAa,CAACoB,OAAQd,O","sources":["webpack://tmx-appstore/./src/Components/product/components/cardProduct/cardProduct.module.scss?b23a","Components/product/components/cardProduct/CardProduct.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"detail-products\":\"cardProduct_detail-products__C2yiW\"};","import React, { lazy, useCallback, useEffect, useState } from \"react\";\nimport style from \"./cardProduct.module.scss\";\n\nconst InfoProduct = lazy(() => import(\"../infoProducts\"));\nconst UnitProducts = lazy(() => import(\"../unitProducts\"));\nconst TotalProducts = lazy(() => import(\"../totalProducts\"));\nconst LogicProducts = lazy(() => import(\"../Logic\"));\n\ntype CardProductsProps = {\n    reference: {\n        id: number,\n        price: number,\n        discount: number,\n        image: string,\n        title: string,\n        colorChoose: string,\n        sizeChoose: Array<string>,\n        promo: string,\n        index: number,\n        promotion: string,\n    };\n    generalValues: CallableFunction\n}\n\nexport const CardProducts: React.FC<CardProductsProps> = ({\n    reference,\n    generalValues,\n}): JSX.Element => {\n\n    \n    const [values, setValues] = useState<any>(0);\n    \n    const getValues = useCallback((values: object) => {\n        const id = reference.id;\n        const concatenatedValues = { id, ...values }\n        setValues(concatenatedValues);\n    }, [reference.id]);\n\n    useEffect(() => {\n        generalValues(values)\n    });\n\n    return (\n        <div className={style[\"detail-products\"]} data-testid=\"box-card-products\">\n            <InfoProduct reference={reference} />\n            <LogicProducts reference={reference} getValues={getValues} />\n            <UnitProducts reference={reference} />\n            <TotalProducts totals={values} />\n        </div>\n    );\n};\n"],"names":["InfoProduct","lazy","UnitProducts","TotalProducts","LogicProducts","CardProducts","_ref","reference","generalValues","values","setValues","useState","getValues","useCallback","id","concatenatedValues","_objectSpread","useEffect","_jsxs","className","style","children","_jsx","totals"],"sourceRoot":""}